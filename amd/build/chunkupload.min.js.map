{"version":3,"sources":["../src/chunkupload.js"],"names":["wwwRoot","chunkSize","fileinput","filename","progress","progressicon","token","init","elementid","acceptedTypes","maxBytes","wwwroot","chunksize","val","parent","next","find","change","reset","file","get","files","fileextension","name","indexOf","splits","split","length","Array","notifyError","key","component","param","size","text","startUpload","end","params","start","id","slice","xhr","XMLHttpRequest","open","$","upload","onprogress","e","setProgress","loaded","onreadystatechange","readyState","status","response","JSON","parse","responseText","error","proceedUpload","setRequestHeader","send","onerror","notification","alert","total","css","prop","errorstring","done","s","fail","exception"],"mappings":"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","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Manage the upload in chunks.\n *\n * @package    local_chunkupload\n * @copyright  2020 Justus Dieckmann WWU\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\nimport $ from 'jquery';\nimport {get_strings} from 'core/str';\nimport notification from 'core/notification';\n\nlet wwwRoot,\n    chunkSize;\n\nlet fileinput, filename, progress, progressicon;\n\nlet token;\n/**\n * Init function\n */\nexport function init(elementid, acceptedTypes, maxBytes, wwwroot, chunksize) {\n    fileinput = $('#' + elementid + \"_file\");\n    token = $('#' + elementid).val();\n    let parent = fileinput.next();\n    filename = parent.find('.chunkupload-filename');\n    progress = parent.find('.chunkupload-progress');\n    progressicon = parent.find('.chunkupload-icon');\n    wwwRoot = wwwroot;\n    chunkSize = chunksize;\n    fileinput.change(() => {\n        reset();\n        let file = fileinput.get(0).files[0];\n        let fileextension = \".\";\n        if (file.name.indexOf(\".\") !== -1) {\n            let splits = file.name.split(\".\");\n            fileextension = \".\" + splits[splits.length - 1];\n        }\n        if (!(acceptedTypes === '*' ||\n            (acceptedTypes instanceof Array && acceptedTypes.indexOf(fileextension) !== -1))) {\n            fileinput.val(null);\n            notifyError({key: 'invalidfiletype', component: 'core_repository', param: fileextension});\n            return;\n        } else if (file.size > maxBytes) {\n            fileinput.val(null);\n            notifyError({key: 'errorpostmaxsize', component: 'core_repository'});\n            return;\n        }\n        filename.text(file.name);\n        startUpload(file);\n    });\n}\n\nfunction startUpload(file) {\n    let end = chunkSize < file.size ? chunkSize : file.size;\n    let params = {\n        start: 0,\n        end: end,\n        length: file.size,\n        filename: file.name,\n        id: token\n    };\n    let slice = file.slice(0, end);\n    let xhr = new XMLHttpRequest();\n    xhr.open('post', wwwRoot + \"/local/chunkupload/startupload_ajax.php?\" + $.param(params));\n    xhr.upload.onprogress = (e) => {\n        setProgress(e.loaded, file.size);\n    };\n    xhr.onreadystatechange = () => {\n        if (xhr.readyState === 4) {\n            if (xhr.status === 200) {\n                let response = JSON.parse(xhr.responseText);\n                if (response.error !== undefined) {\n                    notifyError(response.error);\n                } else {\n                    if (end < file.size) {\n                        proceedUpload(file, chunkSize);\n                    }\n                }\n            }\n        }\n    };\n    xhr.setRequestHeader('Content-Type', 'application/octet-stream');\n    xhr.send(slice);\n}\n\nfunction proceedUpload(file, start) {\n    let end = start + chunkSize < file.size ? start + chunkSize : file.size;\n    let params = {\n        start: start,\n        end: end,\n        id: token\n    };\n    let slice = file.slice(start, end);\n    let xhr = new XMLHttpRequest();\n    xhr.open('post', wwwRoot + \"/local/chunkupload/proceedupload_ajax.php?\" + $.param(params));\n    xhr.upload.onprogress = (e) => {\n        setProgress(e.loaded + start, file.size);\n    };\n    xhr.onreadystatechange = () => {\n        if (xhr.readyState === 4) {\n            if (xhr.status === 200) {\n                let response = JSON.parse(xhr.responseText);\n                if (response.error !== undefined) {\n                    notifyError(response.error);\n                } else {\n                    if (end < file.size) {\n                        proceedUpload(file, end);\n                    }\n                }\n            }\n        }\n    };\n    xhr.onerror = () => {\n        reset();\n        // Doesn't make sense to try to fetch strings when having internet problems.\n        notification.alert(\"Error\", \"Failure while uploading!\", \"Ok\");\n    };\n    xhr.setRequestHeader('Content-Type', 'application/octet-stream');\n    xhr.send(slice);\n}\n\nfunction reset() {\n    setProgress(0, 1);\n    filename.text(\"\");\n}\n\nfunction setProgress(loaded, total) {\n    if (loaded === total) {\n        // Hide progressbar on finish.\n        progress.css('width', '0');\n    } else {\n        progress.css('width', loaded * 100 / total + \"%\");\n    }\n    progressicon.prop('hidden', loaded !== total);\n}\n\nfunction notifyError(errorstring) {\n    reset();\n    if (typeof errorstring === \"string\") {\n        get_strings([\n            {key: 'error'},\n            {key: 'ok'},\n        ]).done(function(s) {\n                notification.alert(s[0], errorstring, s[1]);\n            }\n        ).fail(notification.exception);\n    } else {\n        get_strings([\n            {key: 'error'},\n            errorstring,\n            {key: 'ok'},\n        ]).done(function(s) {\n                notification.alert(s[0], s[1], s[2]);\n            }\n        ).fail(notification.exception);\n    }\n}"],"file":"chunkupload.min.js"}