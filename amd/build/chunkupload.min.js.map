{"version":3,"sources":["../src/chunkupload.js"],"names":["wwwRoot","chunkSize","elementId","fileinput","filename","progress","progressicon","init","elementid","acceptedTypes","maxBytes","wwwroot","chunksize","parent","next","find","change","file","get","files","fileextension","name","indexOf","splits","split","length","Array","val","notifyError","key","component","param","size","text","startUpload","end","params","start","slice","xhr","XMLHttpRequest","open","$","upload","onprogress","e","setProgress","loaded","onreadystatechange","readyState","status","response","JSON","parse","responseText","error","proceedUpload","fid","continuetoken","setFileId","setRequestHeader","send","fileid","reset","total","css","prop","fileId","errorstring","done","s","notification","alert","fail","exception"],"mappings":"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","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Manage the upload in chunks.\n *\n * @package    local_chunkupload\n * @copyright  2020 Justus Dieckmann WWU\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\nimport $ from 'jquery';\nimport {get_strings} from 'core/str';\nimport notification from 'core/notification';\n\nlet wwwRoot,\n    chunkSize,\n    elementId;\n\nlet fileinput, filename, progress, progressicon;\n/**\n * Init function\n */\nexport function init(elementid, acceptedTypes, maxBytes, wwwroot, chunksize) {\n    fileinput = $('#' + elementid + \"_file\");\n    let parent = fileinput.next();\n    filename = parent.find('.chunkupload-filename');\n    progress = parent.find('.chunkupload-progress');\n    progressicon = parent.find('.chunkupload-icon');\n    wwwRoot = wwwroot;\n    chunkSize = chunksize;\n    elementId = elementid;\n    fileinput.change(() => {\n        let file = fileinput.get(0).files[0];\n        let fileextension = \".\";\n        if (file.name.indexOf(\".\") !== -1) {\n            let splits = file.name.split(\".\");\n            fileextension = \".\" + splits[splits.length - 1];\n        }\n        if (!(acceptedTypes === '*' ||\n            (acceptedTypes instanceof Array && acceptedTypes.indexOf(fileextension) !== -1))) {\n            fileinput.val(null);\n            notifyError({key: 'invalidfiletype', component: 'core_repository', param: fileextension});\n            return;\n        } else if (file.size > maxBytes) {\n            fileinput.val(null);\n            notifyError({key: 'errorpostmaxsize', component: 'core_repository'});\n            return;\n        }\n        filename.text(file.name);\n        startUpload(file);\n    });\n}\n\nfunction startUpload(file) {\n    let end = chunkSize < file.size ? chunkSize : file.size;\n    let params = {\n        start: 0,\n        end: end,\n        length: file.size,\n        filename: file.name\n    };\n    let slice = file.slice(0, end);\n    let xhr = new XMLHttpRequest();\n    xhr.open('post', wwwRoot + \"/local/chunkupload/startupload_ajax.php?\" + $.param(params));\n    xhr.upload.onprogress = (e) => {\n        setProgress(e.loaded, file.size);\n    };\n    xhr.onreadystatechange = () => {\n        if (xhr.readyState === 4) {\n            if (xhr.status === 200) {\n                let response = JSON.parse(xhr.responseText);\n                if (response.error !== undefined) {\n                    notifyError(response.error);\n                } else {\n                    if (end < file.size) {\n                        proceedUpload(file, chunkSize, response.fid, response.continuetoken);\n                    } else {\n                        setFileId(response.fid);\n                    }\n                }\n            }\n        }\n    };\n    xhr.setRequestHeader('Content-Type', 'application/octet-stream');\n    xhr.send(slice);\n}\n\nfunction proceedUpload(file, start, fileid, continuetoken) {\n    let end = start + chunkSize < file.size ? start + chunkSize : file.size;\n    let params = {\n        start: start,\n        end: end,\n        continuetoken: continuetoken,\n        fileid: fileid\n    };\n    let slice = file.slice(start, end);\n    let xhr = new XMLHttpRequest();\n    xhr.open('post', wwwRoot + \"/local/chunkupload/proceedupload_ajax.php?\" + $.param(params));\n    xhr.upload.onprogress = (e) => {\n        setProgress(e.loaded + start, file.size);\n    };\n    xhr.onreadystatechange = () => {\n        if (xhr.readyState === 4) {\n            if (xhr.status === 200) {\n                let response = JSON.parse(xhr.responseText);\n                if (response.error !== undefined) {\n                    notifyError(response.error);\n                } else {\n                    if (end < file.size) {\n                        proceedUpload(file, end, fileid, response.continuetoken);\n                    } else {\n                        setFileId(fileid);\n                    }\n                }\n            }\n        }\n    };\n    xhr.setRequestHeader('Content-Type', 'application/octet-stream');\n    xhr.send(slice);\n}\n\nfunction reset() {\n    setProgress(0, 1);\n    setFileId(null);\n    filename.text(\"\");\n}\n\nfunction setProgress(loaded, total) {\n    if (loaded === total) {\n        // Hide progressbar on finish.\n        progress.css('width', '0');\n    } else {\n        progress.css('width', loaded * 100 / total + \"%\");\n    }\n    progressicon.prop('hidden', loaded !== total);\n}\n\nfunction setFileId(fileId) {\n    $('#' + elementId).val(fileId);\n}\n\nfunction notifyError(errorstring) {\n    reset();\n    if (typeof errorstring === \"string\") {\n        get_strings([\n            {key: 'error'},\n            {key: 'ok'},\n        ]).done(function(s) {\n                notification.alert(s[0], errorstring, s[1]);\n            }\n        ).fail(notification.exception);\n    } else {\n        get_strings([\n            {key: 'error'},\n            errorstring,\n            {key: 'ok'},\n        ]).done(function(s) {\n                notification.alert(s[0], s[1], s[2]);\n            }\n        ).fail(notification.exception);\n    }\n}"],"file":"chunkupload.min.js"}